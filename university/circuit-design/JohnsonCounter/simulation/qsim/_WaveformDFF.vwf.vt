// Copyright (C) 2019  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "03/23/2021 19:45:03"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          _JohnsonCounterDFF
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module _JohnsonCounterDFF_vlg_vec_tst();
// constants                                           
// general purpose registers
reg C;
reg nR;
// wires                                               
wire nQ1;
wire nQ2;
wire nQ3;
wire nQ4;
wire nQ5;
wire nQ6;
wire nQ7;
wire nQ8;
wire nQ9;
wire nQ10;
wire nQ11;
wire nQ12;
wire Q1;
wire Q2;
wire Q3;
wire Q4;
wire Q5;
wire Q6;
wire Q7;
wire Q8;
wire Q9;
wire Q10;
wire Q11;
wire Q12;

// assign statements (if any)                          
_JohnsonCounterDFF i1 (
// port map - connection between master ports and signals/registers   
	.C(C),
	.nQ1(nQ1),
	.nQ2(nQ2),
	.nQ3(nQ3),
	.nQ4(nQ4),
	.nQ5(nQ5),
	.nQ6(nQ6),
	.nQ7(nQ7),
	.nQ8(nQ8),
	.nQ9(nQ9),
	.nQ10(nQ10),
	.nQ11(nQ11),
	.nQ12(nQ12),
	.nR(nR),
	.Q1(Q1),
	.Q2(Q2),
	.Q3(Q3),
	.Q4(Q4),
	.Q5(Q5),
	.Q6(Q6),
	.Q7(Q7),
	.Q8(Q8),
	.Q9(Q9),
	.Q10(Q10),
	.Q11(Q11),
	.Q12(Q12)
);
initial 
begin 
#4000000 $finish;
end 

// C
initial
begin
	repeat(33)
	begin
		C = 1'b0;
		C = #60500 1'b1;
		# 60500;
	end
	C = 1'b0;
end 

// nR
initial
begin
	nR = 1'b0;
	nR = #170000 1'b1;
end 
endmodule

